local UILibrary = {}

function UILibrary:CreateWindow(title, defaultSize, defaultPosition)
    local window = {}
    window.elements = {}
    
    -- Create main UI components
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CustomUI"
    screenGui.Parent = game.CoreGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = defaultSize or UDim2.new(0, 200, 0, 200)
    mainFrame.Position = defaultPosition or UDim2.new(0.5, -100, 0.5, -100)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui

    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 20)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleText = Instance.new("TextLabel")
    titleText.Name = "TitleText"
    titleText.Size = UDim2.new(0.7, 0, 1, 0)
    titleText.Position = UDim2.new(0, 5, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = title or "UI Window"
    titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Font = Enum.Font.Gotham
    titleText.TextSize = 12
    titleText.Parent = titleBar

    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Size = UDim2.new(0, 20, 0, 20)
    minimizeButton.Position = UDim2.new(1, -20, 0, 0)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    minimizeButton.BorderSizePixel = 0
    minimizeButton.Text = "_"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.Font = Enum.Font.Gotham
    minimizeButton.TextSize = 14
    minimizeButton.Parent = titleBar

    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, 0, 1, -20)
    contentFrame.Position = UDim2.new(0, 0, 0, 20)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    -- Window state
    local minimized = false
    local originalSize = mainFrame.Size
    local originalPosition = mainFrame.Position

    -- Minimize function
    local function toggleMinimize()
        minimized = not minimized
        if minimized then
            mainFrame.Size = UDim2.new(0, 200, 0, 20)
            minimizeButton.Text = "+"
        else
            mainFrame.Size = originalSize
            minimizeButton.Text = "_"
        end
    end

    minimizeButton.MouseButton1Click:Connect(toggleMinimize)

    -- Public methods
    function window:Toggle()
        mainFrame.Visible = not mainFrame.Visible
    end

    function window:Destroy()
        screenGui:Destroy()
    end

    function window:AddLabel(options)
        local label = Instance.new("TextLabel")
        label.Name = options.Name or "Label"
        label.Size = options.Size or UDim2.new(0.8, 0, 0, 20)
        label.Position = options.Position or UDim2.new(0.1, 0, 0.1, 0)
        label.BackgroundTransparency = 1
        label.Text = options.Text or "Label"
        label.TextColor3 = options.TextColor3 or Color3.fromRGB(255, 255, 255)
        label.TextXAlignment = options.TextXAlignment or Enum.TextXAlignment.Left
        label.Font = options.Font or Enum.Font.Gotham
        label.TextSize = options.TextSize or 12
        label.Parent = contentFrame
        
        table.insert(window.elements, label)
        return label
    end

    function window:AddButton(options)
        local button = Instance.new("TextButton")
        button.Name = options.Name or "Button"
        button.Size = options.Size or UDim2.new(0.8, 0, 0, 30)
        button.Position = options.Position or UDim2.new(0.1, 0, 0.3, 0)
        button.BackgroundColor3 = options.BackgroundColor3 or Color3.fromRGB(40, 40, 40)
        button.BorderSizePixel = 0
        button.Text = options.Text or "Button"
        button.TextColor3 = options.TextColor3 or Color3.fromRGB(255, 255, 255)
        button.Font = options.Font or Enum.Font.Gotham
        button.TextSize = options.TextSize or 14
        button.Parent = contentFrame
        
        if options.Callback and type(options.Callback) == "function" then
            button.MouseButton1Click:Connect(options.Callback)
        end
        
        table.insert(window.elements, button)
        return button
    end

    function window:AddToggle(options)
        local toggle = Instance.new("TextButton")
        toggle.Name = options.Name or "Toggle"
        toggle.Size = options.Size or UDim2.new(0.8, 0, 0, 30)
        toggle.Position = options.Position or UDim2.new(0.1, 0, 0.5, 0)
        toggle.BackgroundColor3 = options.BackgroundColor3 or Color3.fromRGB(40, 40, 40)
        toggle.BorderSizePixel = 0
        toggle.Text = options.Text or "Toggle: OFF"
        toggle.TextColor3 = options.StartingState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggle.Font = options.Font or Enum.Font.Gotham
        toggle.TextSize = options.TextSize or 14
        toggle.Parent = contentFrame
        
        local state = options.StartingState or false
        
        local function updateToggle()
            if state then
                toggle.Text = options.Text and options.Text..": ON" or "Toggle: ON"
                toggle.TextColor3 = Color3.fromRGB(0, 255, 0)
            else
                toggle.Text = options.Text and options.Text..": OFF" or "Toggle: OFF"
                toggle.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
        
        toggle.MouseButton1Click:Connect(function()
            state = not state
            updateToggle()
            if options.Callback and type(options.Callback) == "function" then
                options.Callback(state)
            end
        end)
        
        updateToggle()
        
        table.insert(window.elements, toggle)
        return toggle
    end

    function window:AddTextBox(options)
        local textBoxFrame = Instance.new("Frame")
        textBoxFrame.Name = options.Name or "TextBoxFrame"
        textBoxFrame.Size = UDim2.new(0.8, 0, 0, 40)
        textBoxFrame.Position = options.Position or UDim2.new(0.1, 0, 0.7, 0)
        textBoxFrame.BackgroundTransparency = 1
        textBoxFrame.Parent = contentFrame
        
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Size = UDim2.new(0.6, 0, 0, 20)
        label.Position = UDim2.new(0, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = options.Text or "Input:"
        label.TextColor3 = options.TextColor3 or Color3.fromRGB(255, 255, 255)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Font = options.Font or Enum.Font.Gotham
        label.TextSize = options.TextSize or 12
        label.Parent = textBoxFrame
        
        local textBox = Instance.new("TextBox")
        textBox.Name = "TextBox"
        textBox.Size = UDim2.new(1, 0, 0, 20)
        textBox.Position = UDim2.new(0, 0, 0, 20)
        textBox.BackgroundColor3 = options.BackgroundColor3 or Color3.fromRGB(40, 40, 40)
        textBox.BorderSizePixel = 0
        textBox.Text = options.DefaultText or ""
        textBox.TextColor3 = options.TextColor3 or Color3.fromRGB(255, 255, 255)
        textBox.Font = options.Font or Enum.Font.Gotham
        textBox.TextSize = options.TextSize or 12
        textBox.Parent = textBoxFrame
        
        if options.Callback and type(options.Callback) == "function" then
            textBox.FocusLost:Connect(function(enterPressed)
                if not enterPressed then return end
                options.Callback(textBox.Text)
            end)
        end
        
        table.insert(window.elements, textBoxFrame)
        return textBox
    end

    function window:UpdateLayout()
        -- This would adjust element positions based on the order they were added
        -- For simplicity, we'll leave this as a placeholder
    end

    return window
end

return UILibrary
